services:
  # üõ† PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres-1
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - connect
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5

  # üèó Airflow Initialization Service
  # üèó Airflow Initialization Service
  airflow-init:
    image: apache/airflow:latest
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    entrypoint: >
      /bin/bash -c '
      echo "üîÑ Initializing Airflow Database..." &&
      airflow db init &&
      airflow db upgrade &&
      echo "‚úÖ Airflow Database Initialized." &&
      echo "üë§ Creating Airflow Admin User..." &&
      airflow users create \
        --username admin \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com \
        --password admin &&
      echo "‚úÖ Airflow Admin User Created."
      '
    networks:
      - connect

  # üåê Airflow Webserver
  airflow-webserver:
    image: apache/airflow:latest
    container_name: airflow-webserver-1
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./keys:/opt/airflow/keys
      - ./data:/opt/airflow/data
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - connect
    command: webserver

  # üìÖ Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:latest
    container_name: airflow-scheduler-1
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./keys:/opt/airflow/keys
      - ./data:/opt/airflow/data
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - connect
    command: scheduler

  # üñ• pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - connect

volumes:
  postgres-db-volume:

networks:
  connect:
    driver: bridge
